%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /projects/jmmp/dbruciaf/NEMO/CHECKOUTS_RELEASE-4.0-HEAD/NEMO_4.0-HEAD_test_MEs/tools/DOMAINcfg/src/phycst.f90
Compiled : 04/29/22  10:43:17
Compiler : Version 8.3.4
Ftnlx    : Version 8318 (libcif 83016)
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hstatic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -ophycst.o
           -I/projects/jmmp/dbruciaf/NEMO/CHECKOUTS_RELEASE-4.0-HEAD/NEMO_4.0-HE
           AD_test_MEs/tools/DOMAINcfg/BLD/inc -sreal64 -sinteger32 -Ovector0
           -hfp0 -O0 -hflex_mp=intolerant -eCID
           -I/opt/cray/netcdf-hdf5parallel/4.3.2/CRAY/83/include
           -I/opt/cray/hdf5-parallel/1.8.13/CRAY/83/include
           -I/common/moci/modules/packages/XIOS/2.0/24708/952/inc
           -I/common/moci/modules/packages/oasis3-mct/2.0/24708/1765/build/lib/m
           ct
           -I/common/moci/modules/packages/oasis3-mct/2.0/24708/1765/build/lib/p
           smile.MPI1 -c -I/opt/cray/cce/8.3.4/craylibs/x86-64/include
           -I/opt/cray/netcdf-hdf5parallel/4.3.2/CRAY/83/include
           -I/opt/cray/hdf5-parallel/1.8.13/CRAY/83/include
           -I/opt/cray/libsci/13.0.1/CRAY/83/haswell/include
           -I/opt/cray/mpt/7.0.4/gni/mpich2-cray/83/include
           -I/opt/cray/rca/1.0.0-2.0502.60530.1.62.ari/include
           -I/opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I/opt/cray/xpmem/0.1-2.0502.64982.5.3.ari/include
           -I/opt/cray/gni-headers/4.0-1.0502.10859.7.8.ari/include
           -I/opt/cray/dmapp/7.0.1-1.0502.11080.8.76.ari/include
           -I/opt/cray/pmi/5.0.5-1.0000.10300.134.8.ari/include
           -I/opt/cray/ugni/6.0-1.0502.10863.8.29.ari/include
           -I/opt/cray/udreg/2.3.2-1.0502.10518.2.17.ari/include
           -I/opt/cray/cce/8.3.4/craylibs/x86-64/pkgconfig/../include
           -I/opt/cray/cce/8.3.4/craylibs/x86-64/include
           -I/opt/cray/wlm_detect/1.0-1.0502.64649.2.1.ari/include
           -I/opt/cray/krca/1.0.0-2.0502.63139.4.31.ari/include
           -I/opt/cray-hss-devel/7.2.0/include /projects/jmmp/dbruciaf/NEMO/CHEC
           KOUTS_RELEASE-4.0-HEAD/NEMO_4.0-HEAD_test_MEs/tools/DOMAINcfg/src/phy
           cst.f90

ftnlx report
------------
Source   : /projects/jmmp/dbruciaf/NEMO/CHECKOUTS_RELEASE-4.0-HEAD/tools_r4.0-HEAD_dev_MEs/DOMAINcfg/BLD/tmp//projects/jmmp/dbruciaf/NEMO/CHECKOUTS_RELEASE-4.0-HEAD/NEMO_4.0-HEAD_test_MEs/tools/DOMAINcfg/src/phycst.f90
Date     : 04/29/2022  10:43:17


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    MODULE phycst
    2.       !!======================================================================
    3.       !!                    ***  MODULE  phycst  ***
    4.       !!     Definition of of both ocean and ice parameters used in the code
    5.       !!=====================================================================
    6.       !! History :   OPA  !  1990-10  (C. Levy - G. Madec)  Original code
    7.       !!             8.1  !  1991-11  (G. Madec, M. Imbard)  cosmetic changes
    8.       !!   NEMO      1.0  !  2002-08  (G. Madec, C. Ethe)  F90, add ice constants
    9.       !!              -   !  2006-08  (G. Madec)  style 
   10.       !!             3.2  !  2006-08  (S. Masson, G. Madec)  suppress useless variables + style 
   11.       !!             3.4  !  2011-11  (C. Harris)  minor changes for CICE constants 
   12.       !!----------------------------------------------------------------------
   13.    
   14.       !!----------------------------------------------------------------------
   15.       !!   phy_cst  : define and print physical constant and domain parameters
   16.       !!----------------------------------------------------------------------
   17.       USE par_oce          ! ocean parameters
                 ^                                   
ftn-1193 ftn: CAUTION PHYCST, File = phycst.f90, Line = 17, Column = 8 
  Module "PAR_KIND" is indirectly used in module "PAR_OCE" and is from file
  "/projects/jmmp/dbruciaf/NEMO/CHECKOUTS_RELEASE-4.0-HEAD/tools_r4.0-HEAD_dev_MEs/DOMAINcfg/BLD/tmp/par_kind.o".  That file no
  longer exists.

   18.       USE in_out_manager   ! I/O manager
                 ^                              
ftn-1193 ftn: CAUTION PHYCST, File = phycst.f90, Line = 18, Column = 8 
  Module "NC4INTERFACE" is indirectly used in module "IN_OUT_MANAGER" and is from file
  "/projects/jmmp/dbruciaf/NEMO/CHECKOUTS_RELEASE-4.0-HEAD/tools_r4.0-HEAD_dev_MEs/DOMAINcfg/BLD/tmp/nc4interface.o".  That file no
  longer exists.

   19.    
   20.       IMPLICIT NONE
   21.       PRIVATE
   22.    
   23.       PUBLIC   phy_cst     ! routine called by inipar.F90
   24.    
   25.       REAL(wp), PUBLIC ::   rpi = 3.141592653589793_wp             !: pi
   26.       REAL(wp), PUBLIC ::   rad = 3.141592653589793_wp / 180._wp   !: conversion from degre into radian
   27.       REAL(wp), PUBLIC ::   rsmall = 0.5 * EPSILON( 1.e0 )         !: smallest real computer value
   28.       
   29.       REAL(wp), PUBLIC ::   rday = 24.*60.*60.     !: day                                [s]
   30.       REAL(wp), PUBLIC ::   rsiyea                 !: sideral year                       [s]
   31.       REAL(wp), PUBLIC ::   rsiday                 !: sideral day                        [s]
   32.       REAL(wp), PUBLIC ::   raamo =  12._wp        !: number of months in one year
   33.       REAL(wp), PUBLIC ::   rjjhh =  24._wp        !: number of hours in one day
   34.       REAL(wp), PUBLIC ::   rhhmm =  60._wp        !: number of minutes in one hour
   35.       REAL(wp), PUBLIC ::   rmmss =  60._wp        !: number of seconds in one minute
   36.       REAL(wp), PUBLIC ::   omega                  !: earth rotation parameter           [s-1]
   37.       REAL(wp), PUBLIC ::   ra    = 6371229._wp    !: earth radius                       [m]
   38.       REAL(wp), PUBLIC ::   grav  = 9.80665_wp     !: gravity                            [m/s2]
   39.       
   40.       REAL(wp), PUBLIC ::   rtt      = 273.16_wp        !: triple point of temperature   [Kelvin]
   41.       REAL(wp), PUBLIC ::   rt0      = 273.15_wp        !: freezing point of fresh water [Kelvin]
   42.    
   43.    
   44.    
   45.    
   46.       REAL(wp), PUBLIC ::   rt0_snow = 273.15_wp        !: melting point of snow         [Kelvin]
   47.       REAL(wp), PUBLIC ::   rt0_ice  = 273.05_wp        !: melting point of ice          [Kelvin]
   48.    
   49.       REAL(wp), PUBLIC ::   rau0                        !: volumic mass of reference     [kg/m3]
   50.       REAL(wp), PUBLIC ::   r1_rau0                     !: = 1. / rau0                   [m3/kg]
   51.       REAL(wp), PUBLIC ::   rcp                         !: ocean specific heat           [J/Kelvin]
   52.       REAL(wp), PUBLIC ::   r1_rcp                      !: = 1. / rcp                    [Kelvin/J]
   53.       REAL(wp), PUBLIC ::   rau0_rcp                    !: = rau0 * rcp 
   54.       REAL(wp), PUBLIC ::   r1_rau0_rcp                 !: = 1. / ( rau0 * rcp )
   55.    
   56.       REAL(wp), PUBLIC ::   rhosn    =  330._wp         !: volumic mass of snow          [kg/m3]
   57.       REAL(wp), PUBLIC ::   emic     =    0.97_wp       !: emissivity of snow or ice
   58.       REAL(wp), PUBLIC ::   sice     =    6.0_wp        !: salinity of ice               [psu]
   59.       REAL(wp), PUBLIC ::   soce     =   34.7_wp        !: salinity of sea               [psu]
   60.       REAL(wp), PUBLIC ::   cevap    =    2.5e+6_wp     !: latent heat of evaporation (water)
   61.       REAL(wp), PUBLIC ::   srgamma  =    0.9_wp        !: correction factor for solar radiation (Oberhuber, 1974)
   62.       REAL(wp), PUBLIC ::   vkarmn   =    0.4_wp        !: von Karman constant
   63.       REAL(wp), PUBLIC ::   stefan   =    5.67e-8_wp    !: Stefan-Boltzmann constant 
   64.    
   65.       REAL(wp), PUBLIC ::   rhoic    =  900._wp         !: volumic mass of sea ice                               [kg/m3]
   66.       REAL(wp), PUBLIC ::   rcdic    =    2.034396_wp   !: conductivity of the ice                               [W/m/K]
   67.       REAL(wp), PUBLIC ::   rcpic    =    1.8837e+6_wp  !: volumetric specific heat for ice                      [J/m3/K]
   68.       REAL(wp), PUBLIC ::   cpic                        !: = rcpic / rhoic  (specific heat for ice)              [J/Kg/K]
   69.       REAL(wp), PUBLIC ::   rcdsn    =    0.22_wp       !: conductivity of the snow                              [W/m/K]
   70.       REAL(wp), PUBLIC ::   rcpsn    =    6.9069e+5_wp  !: volumetric specific heat for snow                     [J/m3/K]
   71.       REAL(wp), PUBLIC ::   xlsn     =  110.121e+6_wp   !: volumetric latent heat fusion of snow                 [J/m3]
   72.       REAL(wp), PUBLIC ::   lfus                        !: = xlsn / rhosn   (latent heat of fusion of fresh ice) [J/Kg]
   73.       REAL(wp), PUBLIC ::   xlic     =  300.33e+6_wp    !: volumetric latent heat fusion of ice                  [J/m3]
   74.       REAL(wp), PUBLIC ::   xsn      =    2.8e+6_wp     !: volumetric latent heat of sublimation of snow         [J/m3]
   75.       !!----------------------------------------------------------------------
   76.       !! NEMO/OCE 4.0 , NEMO Consortium (2018)
   77.       !! $Id: phycst.F90 5147 2015-03-13 10:01:32Z cetlod $ 
   78.       !! Software governed by the CeCILL licence (./LICENSE)
   79.       !!----------------------------------------------------------------------
   80.       
   81.    CONTAINS
   82.       
   83.       SUBROUTINE phy_cst
   84.          !!----------------------------------------------------------------------
   85.          !!                       ***  ROUTINE phy_cst  ***
   86.          !!
   87.          !! ** Purpose :   Print model parameters and set and print the constants
   88.          !!----------------------------------------------------------------------
   89.          CHARACTER (len=64) ::   cform = "(A12, 3(A13, I7) )" 
   90.          !!----------------------------------------------------------------------
   91.    
   92.          IF(lwp) WRITE(numout,*)
   93.          IF(lwp) WRITE(numout,*) ' phy_cst : initialization of ocean parameters and constants'
   94.          IF(lwp) WRITE(numout,*) ' ~~~~~~~'
   95.    
   96.          ! Ocean Parameters
   97.          ! ----------------
   98.          IF(lwp) THEN
   99.             WRITE(numout,*) '       Domain info'
  100.             WRITE(numout,*) '          dimension of model'
  101.             WRITE(numout,*) '                 Local domain      Global domain       Data domain '
  102.             WRITE(numout,cform) '            ','   jpi     : ', jpi, '   jpiglo  : ', jpiglo, '   jpidta  : ', jpidta
  103.             WRITE(numout,cform) '            ','   jpj     : ', jpj, '   jpjglo  : ', jpjglo, '   jpjdta  : ', jpjdta
  104.             WRITE(numout,cform) '            ','   jpk     : ', jpk, '   jpk     : ', jpk   , '   jpkdta  : ', jpkdta
  105.             WRITE(numout,*)      '           ','   jpij    : ', jpij
  106.             WRITE(numout,*) '          mpp local domain info (mpp)'
  107.             WRITE(numout,*) '             jpni    : ', jpni, '   jpreci  : ', jpreci
  108.             WRITE(numout,*) '             jpnj    : ', jpnj, '   jprecj  : ', jprecj
  109.             WRITE(numout,*) '             jpnij   : ', jpnij
  110.             WRITE(numout,*) '          lateral domain boundary condition type : jperio  = ', jperio
  111.          ENDIF
  112.    
  113.          ! Define constants
  114.          ! ----------------
  115.          IF(lwp) WRITE(numout,*)
  116.          IF(lwp) WRITE(numout,*) '       Constants'
  117.    
  118.          IF(lwp) WRITE(numout,*)
  119.          IF(lwp) WRITE(numout,*) '          mathematical constant                 rpi = ', rpi
  120.    
  121.          rsiyea = 365.25_wp * rday * 2._wp * rpi / 6.283076_wp
  122.          rsiday = rday / ( 1._wp + rday / rsiyea )
  123.          omega  = 2._wp * rpi / rsiday 
  124.          IF(lwp) WRITE(numout,*)
  125.          IF(lwp) WRITE(numout,*) '          day                                rday   = ', rday,   ' s'
  126.          IF(lwp) WRITE(numout,*) '          sideral year                       rsiyea = ', rsiyea, ' s'
  127.          IF(lwp) WRITE(numout,*) '          sideral day                        rsiday = ', rsiday, ' s'
  128.          IF(lwp) WRITE(numout,*) '          omega                              omega  = ', omega,  ' s^-1'
  129.    
  130.          IF(lwp) WRITE(numout,*)
  131.          IF(lwp) WRITE(numout,*) '          nb of months per year               raamo = ', raamo, ' months'
  132.          IF(lwp) WRITE(numout,*) '          nb of hours per day                 rjjhh = ', rjjhh, ' hours'
  133.          IF(lwp) WRITE(numout,*) '          nb of minutes per hour              rhhmm = ', rhhmm, ' mn'
  134.          IF(lwp) WRITE(numout,*) '          nb of seconds per minute            rmmss = ', rmmss, ' s'
  135.    
  136.          IF(lwp) WRITE(numout,*)
  137.          IF(lwp) WRITE(numout,*) '          earth radius                         ra   = ', ra, ' m'
  138.          IF(lwp) WRITE(numout,*) '          gravity                              grav = ', grav , ' m/s^2'
  139.    
  140.          IF(lwp) WRITE(numout,*)
  141.          IF(lwp) WRITE(numout,*) '          triple point of temperature      rtt      = ', rtt     , ' K'
  142.          IF(lwp) WRITE(numout,*) '          freezing point of water          rt0      = ', rt0     , ' K'
  143.          IF(lwp) WRITE(numout,*) '          melting point of snow            rt0_snow = ', rt0_snow, ' K'
  144.          IF(lwp) WRITE(numout,*) '          melting point of ice             rt0_ice  = ', rt0_ice , ' K'
  145.    
  146.          IF(lwp) WRITE(numout,*) '          reference density and heat capacity now defined in eosbn2.f90'
  147.                  
  148.          cpic = rcpic / rhoic       ! specific heat for ice   [J/Kg/K]
  149.          lfus = xlsn / rhosn        ! latent heat of fusion of fresh ice
  150.          IF(lwp) THEN
  151.             WRITE(numout,*)
  152.             WRITE(numout,*) '          thermal conductivity of the snow          = ', rcdsn   , ' J/s/m/K'
  153.             WRITE(numout,*) '          thermal conductivity of the ice           = ', rcdic   , ' J/s/m/K'
  154.             WRITE(numout,*) '          fresh ice specific heat                   = ', cpic    , ' J/kg/K'
  155.             WRITE(numout,*) '          latent heat of fusion of fresh ice / snow = ', lfus    , ' J/kg'
  156.             WRITE(numout,*) '          density times specific heat for snow      = ', rcpsn   , ' J/m^3/K' 
  157.             WRITE(numout,*) '          density times specific heat for ice       = ', rcpic   , ' J/m^3/K'
  158.             WRITE(numout,*) '          volumetric latent heat fusion of sea ice  = ', xlic    , ' J/m' 
  159.             WRITE(numout,*) '          latent heat of sublimation of snow        = ', xsn     , ' J/kg' 
  160.             WRITE(numout,*) '          volumetric latent heat fusion of snow     = ', xlsn    , ' J/m^3' 
  161.             WRITE(numout,*) '          density of sea ice                        = ', rhoic   , ' kg/m^3'
  162.             WRITE(numout,*) '          density of snow                           = ', rhosn   , ' kg/m^3'
  163.             WRITE(numout,*) '          emissivity of snow or ice                 = ', emic  
  164.             WRITE(numout,*) '          salinity of ice                           = ', sice    , ' psu'
  165.             WRITE(numout,*) '          salinity of sea                           = ', soce    , ' psu'
  166.             WRITE(numout,*) '          latent heat of evaporation (water)        = ', cevap   , ' J/m^3' 
  167.             WRITE(numout,*) '          correction factor for solar radiation     = ', srgamma 
  168.             WRITE(numout,*) '          von Karman constant                       = ', vkarmn 
  169.             WRITE(numout,*) '          Stefan-Boltzmann constant                 = ', stefan  , ' J/s/m^2/K^4'
  170.             WRITE(numout,*)
  171.             WRITE(numout,*) '          conversion: degre ==> radian          rad = ', rad
  172.             WRITE(numout,*)
  173.             WRITE(numout,*) '          smallest real computer value       rsmall = ', rsmall
  174.          ENDIF
  175.    
  176.       END SUBROUTINE phy_cst
  177.    
  178.       !!======================================================================
  179.    END MODULE phycst


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
EPSILON(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   PHYCST (Line 27, file phycst.f90)

Name  Messages
----  --------
GET_NF90_SYMBOL in NC4INTERFACE
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
IN_OUT_MANAGER
      Defined as:  No definitions.

      Used By:     PHYCST

Name  Messages
----  --------
NC4INTERFACE
      Defined as:  No definitions.

      Used By:     PHYCST  (indirectly)

Name  Messages
----  --------
PAR_KIND
      Defined as:  No definitions.

      Used By:     PHYCST  (indirectly)
                   PHYCST  (indirectly)

Name  Messages
----  --------
PAR_OCE
      Defined as:  No definitions.

      Used By:     PHYCST  (indirectly)

Name  Messages
----  --------
PHYCST
      Defined as:  Module (line 1, file phycst.f90)

      Calls:       EPSILON(Intrinsic) (Line 27, file phycst.f90)

        Uses:      PAR_KIND  (indirectly)
                   IN_OUT_MANAGER
                   PAR_KIND  (indirectly)
                   NC4INTERFACE  (indirectly)
                   PAR_OCE  (indirectly)

Name  Messages
----  --------
PHY_CST in PHYCST
      Defined as:  Subroutine (line 23, file phycst.f90)

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
SET_NF90_DEF_VAR_CHUNKING in NC4INTERFACE
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
SET_NF90_DEF_VAR_DEFLATE in NC4INTERFACE
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
