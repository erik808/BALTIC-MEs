%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /projects/jmmp/dbruciaf/NEMO/CHECKOUTS_RELEASE-4.0-HEAD/NEMO_4.0-HEAD_test_MEs/tools/DOMAINcfg/src/stringop.f90
Compiled : 04/29/22  10:44:12
Compiler : Version 8.3.4
Ftnlx    : Version 8318 (libcif 83016)
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hstatic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -ostringop.o
           -I/projects/jmmp/dbruciaf/NEMO/CHECKOUTS_RELEASE-4.0-HEAD/NEMO_4.0-HE
           AD_test_MEs/tools/DOMAINcfg/BLD/inc -sreal64 -sinteger32 -Ovector0
           -hfp0 -O0 -hflex_mp=intolerant -eCID
           -I/opt/cray/netcdf-hdf5parallel/4.3.2/CRAY/83/include
           -I/opt/cray/hdf5-parallel/1.8.13/CRAY/83/include
           -I/common/moci/modules/packages/XIOS/2.0/24708/952/inc
           -I/common/moci/modules/packages/oasis3-mct/2.0/24708/1765/build/lib/m
           ct
           -I/common/moci/modules/packages/oasis3-mct/2.0/24708/1765/build/lib/p
           smile.MPI1 -c -I/opt/cray/cce/8.3.4/craylibs/x86-64/include
           -I/opt/cray/netcdf-hdf5parallel/4.3.2/CRAY/83/include
           -I/opt/cray/hdf5-parallel/1.8.13/CRAY/83/include
           -I/opt/cray/libsci/13.0.1/CRAY/83/haswell/include
           -I/opt/cray/mpt/7.0.4/gni/mpich2-cray/83/include
           -I/opt/cray/rca/1.0.0-2.0502.60530.1.62.ari/include
           -I/opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I/opt/cray/xpmem/0.1-2.0502.64982.5.3.ari/include
           -I/opt/cray/gni-headers/4.0-1.0502.10859.7.8.ari/include
           -I/opt/cray/dmapp/7.0.1-1.0502.11080.8.76.ari/include
           -I/opt/cray/pmi/5.0.5-1.0000.10300.134.8.ari/include
           -I/opt/cray/ugni/6.0-1.0502.10863.8.29.ari/include
           -I/opt/cray/udreg/2.3.2-1.0502.10518.2.17.ari/include
           -I/opt/cray/cce/8.3.4/craylibs/x86-64/pkgconfig/../include
           -I/opt/cray/cce/8.3.4/craylibs/x86-64/include
           -I/opt/cray/wlm_detect/1.0-1.0502.64649.2.1.ari/include
           -I/opt/cray/krca/1.0.0-2.0502.63139.4.31.ari/include
           -I/opt/cray-hss-devel/7.2.0/include /projects/jmmp/dbruciaf/NEMO/CHEC
           KOUTS_RELEASE-4.0-HEAD/NEMO_4.0-HEAD_test_MEs/tools/DOMAINcfg/src/str
           ingop.f90

ftnlx report
------------
Source   : /projects/jmmp/dbruciaf/NEMO/CHECKOUTS_RELEASE-4.0-HEAD/tools_r4.0-HEAD_dev_MEs/DOMAINcfg/BLD/tmp//projects/jmmp/dbruciaf/NEMO/CHECKOUTS_RELEASE-4.0-HEAD/NEMO_4.0-HEAD_test_MEs/tools/DOMAINcfg/src/stringop.f90
Date     : 04/29/2022  10:44:12


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    MODULE stringop
    2.    !-
    3.    !$Id: stringop.f90 2281 2010-10-15 14:21:13Z smasson $
    4.    !-
    5.    ! This software is governed by the CeCILL license
    6.    ! See IOIPSL/IOIPSL_License_CeCILL.txt
    7.    !---------------------------------------------------------------------
    8.    CONTAINS
    9.    !=
   10.    SUBROUTINE cmpblank (str)
   11.    !---------------------------------------------------------------------
   12.    !- Compact blanks
   13.    !---------------------------------------------------------------------
   14.      CHARACTER(LEN=*),INTENT(inout) :: str
   15.    !-
   16.      INTEGER :: lcc,ipb
   17.    !---------------------------------------------------------------------
   18.      lcc = LEN_TRIM(str)
   19.      ipb = 1
   20.      DO
   21.        IF (ipb >= lcc)   EXIT
   22.        IF (str(ipb:ipb+1) == '  ') THEN
   23.          str(ipb+1:) = str(ipb+2:lcc)
   24.          lcc = lcc-1
   25.        ELSE
   26.          ipb = ipb+1
   27.        ENDIF
   28.      ENDDO
   29.    !----------------------
   30.    END SUBROUTINE cmpblank
   31.    !===
   32.    INTEGER FUNCTION cntpos (c_c,l_c,c_r,l_r)
   33.    !---------------------------------------------------------------------
   34.    !- Finds number of occurences of c_r in c_c
   35.    !---------------------------------------------------------------------
   36.      IMPLICIT NONE
   37.    !-
   38.      CHARACTER(LEN=*),INTENT(in) :: c_c
   39.      INTEGER,INTENT(IN) :: l_c
   40.      CHARACTER(LEN=*),INTENT(in) :: c_r
   41.      INTEGER,INTENT(IN) :: l_r
   42.    !-
   43.      INTEGER :: ipos,indx
   44.    !---------------------------------------------------------------------
   45.      cntpos = 0
   46.      ipos   = 1
   47.      DO
   48.        indx = INDEX(c_c(ipos:l_c),c_r(1:l_r))
   49.        IF (indx > 0) THEN
   50.          cntpos = cntpos+1
   51.          ipos   = ipos+indx+l_r-1
   52.        ELSE
   53.          EXIT
   54.        ENDIF
   55.      ENDDO
   56.    !------------------
   57.    END FUNCTION cntpos
   58.    !===
   59.    INTEGER FUNCTION findpos (c_c,l_c,c_r,l_r)
   60.    !---------------------------------------------------------------------
   61.    !- Finds position of c_r in c_c
   62.    !---------------------------------------------------------------------
   63.      IMPLICIT NONE
   64.    !-
   65.      CHARACTER(LEN=*),INTENT(in) :: c_c
   66.      INTEGER,INTENT(IN) :: l_c
   67.      CHARACTER(LEN=*),INTENT(in) :: c_r
   68.      INTEGER,INTENT(IN) :: l_r
   69.    !---------------------------------------------------------------------
   70.      findpos = INDEX(c_c(1:l_c),c_r(1:l_r))
   71.      IF (findpos == 0)  findpos=-1
   72.    !-------------------
   73.    END FUNCTION findpos
   74.    !===
   75.    SUBROUTINE find_str (str_tab,str,pos)
   76.    !---------------------------------------------------------------------
   77.    !- This subroutine looks for a string in a table
   78.    !---------------------------------------------------------------------
   79.    !- INPUT
   80.    !-   str_tab  : Table  of strings
   81.    !-   str      : Target we are looking for
   82.    !- OUTPUT
   83.    !-   pos      : -1 if str not found, else value in the table
   84.    !---------------------------------------------------------------------
   85.      IMPLICIT NONE
   86.    !-
   87.      CHARACTER(LEN=*),DIMENSION(:),INTENT(in) :: str_tab
   88.      CHARACTER(LEN=*),INTENT(in) :: str
   89.      INTEGER,INTENT(out) :: pos
   90.    !-
   91.      INTEGER :: nb_str,i
   92.    !---------------------------------------------------------------------
   93.      pos = -1
   94.      nb_str=SIZE(str_tab)
   95.      IF ( nb_str > 0 ) THEN
   96.        DO i=1,nb_str
   97.          IF ( TRIM(str_tab(i)) == TRIM(str) ) THEN
   98.            pos = i
   99.            EXIT
  100.          ENDIF
  101.        ENDDO
  102.      ENDIF
  103.    !----------------------
  104.    END SUBROUTINE find_str
  105.    !===
  106.    SUBROUTINE nocomma (str)
  107.    !---------------------------------------------------------------------
  108.    !- Replace commas with blanks
  109.    !---------------------------------------------------------------------
  110.      IMPLICIT NONE
  111.    !-
  112.      CHARACTER(LEN=*) :: str
  113.    !-
  114.      INTEGER :: i
  115.    !---------------------------------------------------------------------
  116.      DO i=1,LEN_TRIM(str)
  117.        IF (str(i:i) == ',')   str(i:i) = ' '
  118.      ENDDO
  119.    !---------------------
  120.    END SUBROUTINE nocomma
  121.    !===
  122.    SUBROUTINE strlowercase (str)
  123.    !---------------------------------------------------------------------
  124.    !- Converts a string into lowercase
  125.    !---------------------------------------------------------------------
  126.      IMPLICIT NONE
  127.    !-
  128.      CHARACTER(LEN=*) :: str
  129.    !-
  130.      INTEGER :: i,ic
  131.    !---------------------------------------------------------------------
  132.      DO i=1,LEN_TRIM(str)
  133.        ic = IACHAR(str(i:i))
  134.        IF ( (ic >= 65).AND.(ic <= 90) )  str(i:i) = ACHAR(ic+32)
  135.      ENDDO
  136.    !--------------------------
  137.    END SUBROUTINE strlowercase
  138.    !===
  139.    SUBROUTINE struppercase (str)
  140.    !---------------------------------------------------------------------
  141.    !- Converts a string into uppercase
  142.    !---------------------------------------------------------------------
  143.      IMPLICIT NONE
  144.    !-
  145.      CHARACTER(LEN=*) :: str
  146.    !-
  147.      INTEGER :: i,ic
  148.    !---------------------------------------------------------------------
  149.      DO i=1,LEN_TRIM(str)
  150.        ic = IACHAR(str(i:i))
  151.        IF ( (ic >= 97).AND.(ic <= 122) )  str(i:i) = ACHAR(ic-32)
  152.      ENDDO
  153.    !--------------------------
  154.    END SUBROUTINE struppercase
  155.    !===
  156.    SUBROUTINE str_xfw (c_string,c_word,l_ok)
  157.    !---------------------------------------------------------------------
  158.    !- Given a character string "c_string", of arbitrary length,
  159.    !- returns a logical flag "l_ok" if a word is found in it,
  160.    !- the first word "c_word" if found and the new string "c_string"
  161.    !- without the first word "c_word"
  162.    !---------------------------------------------------------------------
  163.      CHARACTER(LEN=*),INTENT(INOUT) :: c_string
  164.      CHARACTER(LEN=*),INTENT(OUT) :: c_word
  165.      LOGICAL,INTENT(OUT) :: l_ok
  166.    !-
  167.      INTEGER :: i_b,i_e
  168.    !---------------------------------------------------------------------
  169.      l_ok = (LEN_TRIM(c_string) > 0)
  170.      IF (l_ok) THEN
  171.        i_b = VERIFY(c_string,' ')
  172.        i_e = INDEX(c_string(i_b:),' ')
  173.        IF (i_e == 0) THEN
  174.          c_word = c_string(i_b:)
  175.          c_string = ""
  176.        ELSE
  177.          c_word = c_string(i_b:i_b+i_e-2)
  178.          c_string = ADJUSTL(c_string(i_b+i_e-1:))
  179.        ENDIF
  180.      ENDIF
  181.    !---------------------
  182.    END SUBROUTINE str_xfw
  183.    !===
  184.    !------------------
  185.    END MODULE stringop


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ACHAR(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   STRLOWERCASE in STRINGOP (Line 134, file stringop.f90)
                   STRUPPERCASE in STRINGOP (Line 151, file stringop.f90)

Name  Messages
----  --------
ADJUSTL(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   STR_XFW in STRINGOP (Line 178, file stringop.f90)

Name  Messages
----  --------
CMPBLANK in STRINGOP
      Defined as:  Subroutine (line 10, file stringop.f90)

      Interface:   None

      Calls:       LEN_TRIM(Intrinsic) (Line 18, file stringop.f90)

Name  Messages
----  --------
CNTPOS in STRINGOP
      Defined as:  Function (line 32, file stringop.f90)

      Interface:   None

      Calls:       INDEX(Intrinsic) (Line 48, file stringop.f90)

Name  Messages
----  --------
FINDPOS in STRINGOP
      Defined as:  Function (line 59, file stringop.f90)

      Interface:   None

      Calls:       INDEX(Intrinsic) (Line 70, file stringop.f90)

Name  Messages
----  --------
FIND_STR in STRINGOP
      Defined as:  Subroutine (line 75, file stringop.f90)

      Interface:   None

      Calls:       SIZE(Intrinsic) (Line 94, file stringop.f90)
                   TRIM(Intrinsic) (Line 97, file stringop.f90)
                   TRIM(Intrinsic) (Line 97, file stringop.f90)

Name  Messages
----  --------
IACHAR(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   STRLOWERCASE in STRINGOP (Line 133, file stringop.f90)
                   STRUPPERCASE in STRINGOP (Line 150, file stringop.f90)

Name  Messages
----  --------
INDEX(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   CNTPOS in STRINGOP (Line 48, file stringop.f90)
                   FINDPOS in STRINGOP (Line 70, file stringop.f90)
                   STR_XFW in STRINGOP (Line 172, file stringop.f90)

Name  Messages
----  --------
LEN_TRIM(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   CMPBLANK in STRINGOP (Line 18, file stringop.f90)
                   NOCOMMA in STRINGOP (Line 116, file stringop.f90)
                   STRLOWERCASE in STRINGOP (Line 132, file stringop.f90)
                   STRUPPERCASE in STRINGOP (Line 149, file stringop.f90)
                   STR_XFW in STRINGOP (Line 169, file stringop.f90)

Name  Messages
----  --------
NOCOMMA in STRINGOP
      Defined as:  Subroutine (line 106, file stringop.f90)

      Interface:   None

      Calls:       LEN_TRIM(Intrinsic) (Line 116, file stringop.f90)

Name  Messages
----  --------
SIZE(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   FIND_STR in STRINGOP (Line 94, file stringop.f90)

Name  Messages
----  --------
STRINGOP
      Defined as:  Module (line 1, file stringop.f90)

                   Does not use any module and is not used by any procedure.

Name  Messages
----  --------
STRLOWERCASE in STRINGOP
      Defined as:  Subroutine (line 122, file stringop.f90)

      Interface:   None

      Calls:       LEN_TRIM(Intrinsic) (Line 132, file stringop.f90)
                   IACHAR(Intrinsic) (Line 133, file stringop.f90)
                   ACHAR(Intrinsic) (Line 134, file stringop.f90)

Name  Messages
----  --------
STRUPPERCASE in STRINGOP
      Defined as:  Subroutine (line 139, file stringop.f90)

      Interface:   None

      Calls:       LEN_TRIM(Intrinsic) (Line 149, file stringop.f90)
                   IACHAR(Intrinsic) (Line 150, file stringop.f90)
                   ACHAR(Intrinsic) (Line 151, file stringop.f90)

Name  Messages
----  --------
STR_XFW in STRINGOP
      Defined as:  Subroutine (line 156, file stringop.f90)

      Interface:   None

      Calls:       LEN_TRIM(Intrinsic) (Line 169, file stringop.f90)
                   VERIFY(Intrinsic) (Line 171, file stringop.f90)
                   INDEX(Intrinsic) (Line 172, file stringop.f90)
                   ADJUSTL(Intrinsic) (Line 178, file stringop.f90)

Name  Messages
----  --------
TRIM(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   FIND_STR in STRINGOP (Line 97, file stringop.f90)
                   FIND_STR in STRINGOP (Line 97, file stringop.f90)

Name  Messages
----  --------
VERIFY(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   STR_XFW in STRINGOP (Line 171, file stringop.f90)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
